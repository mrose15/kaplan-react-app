{"version":3,"sources":["components/Book/Book.js","components/Input/Input.js","components/BookList/BookList.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Book","book","className","volumeInfo","title","authors","publisher","publishedDate","InputBox","props","type","placeholder","onChange","handleChange","BookList","state","books","searchField","editSearchTerm","e","setState","target","value","axios","get","then","res","data","items","catch","error","this","searchedList","forEach","toLowerCase","includes","push","icon","faSearch","Input","map","id","React","Component","Button","useState","size","variant","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,sBAAKC,UAAU,oDAAf,UACE,6BAAKD,EAAKE,WAAWC,QACrB,4BAAIH,EAAKE,WAAWE,QAAQ,KAC5B,4BAAIJ,EAAKE,WAAWG,YACpB,4BAAIL,EAAKE,WAAWI,mBCN1B,IAWeC,EAXE,SAACC,GAChB,OACE,uBACEC,KAAMD,EAAMC,KACZC,YAAaF,EAAME,YACnBT,UAAWO,EAAMP,UACjBU,SAAUH,EAAMI,gB,gBCDDC,E,4MACnBC,MAAQ,CACNC,MAAO,GACPC,YAAa,I,EAcfC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,YAAaE,EAAEE,OAAOC,S,uDAZxC,WAAqB,IAAD,OAClBC,IACGC,IADH,sEAEGC,MAAK,SAACC,GACL,EAAKN,SAAS,CAAEJ,MAAOU,EAAIC,KAAKC,WAEjCC,OAAM,SAACC,GACN,MAAMA,O,oBAQZ,WAAS,MAEwBC,KAAKhB,MAA5BC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YAETe,EAAe,GAerB,OAdAhB,EAAMiB,SAAQ,SAAChC,GAEb,GADkB,UAAMA,EAAKE,WAAWC,MAAtB,YAA+BH,EAAKE,WAAWE,QAAQ,GAAvD,YAA6DJ,EAAKE,WAAWG,WAC9E4B,cAAcC,SAASlB,EAAYiB,eAClD,OAAOF,EAAaI,KAAKnC,MAY3B,0BAASC,UAAU,0BAAnB,UACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,CAAiBmC,KAAMC,MAGvB,cAACC,EAAD,CACE5B,YAAY,SACZD,KAAK,SACLG,aAAckB,KAAKb,oBAGvB,qBAAKhB,UAAU,uBAAf,SACE,6CAED8B,EAAaQ,KAAI,SAACvC,GAAD,OAChB,cAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKwC,c,GAxDYC,IAAMC,W,QCI7BC,MATf,SAAgBnC,GAAO,IAAD,EACHoC,mBAASpC,EAAMqC,MAAvBA,EADW,sBAEAD,mBAASpC,EAAMsC,SAA1BA,EAFW,oBAIlB,OACI,wBAAQ7C,UAAS,mBAAc6C,EAAd,iBAA8BD,GAA/C,SAAwDrC,EAAMuC,YCmBvDC,G,kKApBb,WACE,OACE,sBAAM/C,UAAU,YAAhB,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,0CAAf,SACE,yCAEF,qBAAKA,UAAU,4DAAf,SACE,cAAC,EAAD,CAAQ6C,QAAQ,UAAUD,KAAM,KAAhC,+BAKF,cAAC,EAAD,a,GAdQJ,IAAMC,YCOTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b446652f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Book({ book }) {\n  return (\n    <div className=\"container__col-xs-12 container__col-md-5 bookcard\">\n      <h3>{book.volumeInfo.title}</h3>\n      <p>{book.volumeInfo.authors[0]}</p>\n      <p>{book.volumeInfo.publisher}</p>\n      <p>{book.volumeInfo.publishedDate}</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst InputBox = (props) => {\n  return (\n    <input\n      type={props.type}\n      placeholder={props.placeholder}\n      className={props.className}\n      onChange={props.handleChange}\n    />\n  );\n};\n\nexport default InputBox;\n\n// export default function Search({ books }) {\n\n//   return (\n//     <div className=\"container__col-xs-6\">\n//       <FontAwesomeIcon icon={faSearch} />\n//       {/* This is label is best for Accessibility but it's not present in the design. According to the design, this field has a placeholder instead\n//       <label htmlFor=\"booksearch\">Search</label>*/}\n//       <input type=\"text\" placeholder=\"Search\" id=\"booksearch\"></input>\n//     </div>\n//   );\n// }\n","import React from \"react\";\nimport axios from \"axios\";\nimport Book from \"../Book/Book\";\nimport InputBox from \"../Input/Input\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class BookList extends React.Component {\n  state = {\n    books: [],\n    searchField: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(`https://www.googleapis.com/books/v1/volumes?q=kaplan%20test%20prep`)\n      .then((res) => {\n        this.setState({ books: res.data.items });\n      })\n      .catch((error) => {\n        throw error;\n      });\n  }\n\n  editSearchTerm = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    //object extraction\n    const { books, searchField } = this.state;\n\n    const searchedList = [];\n    books.forEach((book) => {\n      const searchString = `${book.volumeInfo.title} ${book.volumeInfo.authors[0]} ${book.volumeInfo.publisher}`;\n      if (searchString.toLowerCase().includes(searchField.toLowerCase())) {\n        return searchedList.push(book);\n      }\n    });\n\n    // books.map((book) => {\n    //   const searchString = `${book.volumeInfo.title} ${book.volumeInfo.authors[0]} ${book.volumeInfo.publisher}`;\n    //   if (searchString.toLowerCase().includes(searchField.toLowerCase())) {\n    //     return searchedList.push(book);\n    //   }\n    // });\n\n    return (\n      <section className=\"container__row booklist\">\n        <div className=\"container__col-xs-6\">\n          <FontAwesomeIcon icon={faSearch} />\n          {/* This is label is best for Accessibility but it's not present in the design. The field has a placeholder instead \n      <label htmlFor=\"booksearch\">Search</label>*/}\n          <InputBox\n            placeholder=\"Search\"\n            type=\"search\"\n            handleChange={this.editSearchTerm}\n          />\n        </div>\n        <div className=\"container__col-xs-12\">\n          <h2>All Books</h2>\n        </div>\n        {searchedList.map((book) => (\n          <Book key={book.id} book={book} />\n        ))}\n      </section>\n    );\n  }\n}\n","import React, {useState} from 'react'\n\nfunction Button(props){\n    const [size] = useState(props.size);\n    const [variant] = useState(props.variant);\n\n    return (\n        <button className={`btn btn--${variant} btn--${size}`}>{props.children}</button>\n    );\n}\n\nexport default Button;\n","import React from \"react\";\nimport BookList from \"./components/BookList/BookList\";\nimport Button from \"./components/Button/Button\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <main className=\"container\">\n        <div className=\"container__row\">\n          <div className=\"container__col-xs-6 container__col-md-8\">\n            <h1>Books</h1>\n          </div>\n          <div className=\"container__col-xs-6 container__col-md-3 flex-align-center\">\n            <Button variant=\"primary\" size={\"lg\"}>\n              Create New Book\n            </Button>\n          </div>\n\n          <BookList />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}